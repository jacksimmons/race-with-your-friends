[gd_scene load_steps=23 format=2]

[ext_resource path="res://Scripts/Editor/editor.gd" type="Script" id=1]
[ext_resource path="res://Scripts/Editor/editor_camera.gd" type="Script" id=2]
[ext_resource path="res://Scripts/Editor/TemplateButtons/panel_hide_button.gd" type="Script" id=3]
[ext_resource path="res://Scripts/Editor/shape_drawing.gd" type="Script" id=4]
[ext_resource path="res://Sprites/Editor/UNSELECTED_VERTEX.png" type="Texture" id=5]
[ext_resource path="res://Scripts/Editor/TemplateButtons/panel_show_button.gd" type="Script" id=6]
[ext_resource path="res://Scripts/Editor/dialog_unsaved_progress.gd" type="Script" id=7]
[ext_resource path="res://Scripts/Editor/TemplateButtons/stop_testing_button.gd" type="Script" id=8]
[ext_resource path="res://Sprites/Editor/RED_PIXEL.png" type="Texture" id=9]
[ext_resource path="res://Sprites/Editor/GREEN_PIXEL.png" type="Texture" id=10]
[ext_resource path="res://Sprites/Editor/SELECTED_VERTEX.png" type="Texture" id=11]
[ext_resource path="res://Scripts/Editor/TemplateButtons/shape_vertex_button.gd" type="Script" id=12]
[ext_resource path="res://Scenes/Templates/TObject.tscn" type="PackedScene" id=13]

[sub_resource type="GDScript" id=7]
script/source = "extends Button

onready var editor = $\"/root/Editor\"
onready var unsaved_progress_dialog = $UnsavedProgressDialog


func _handle_back():
	# Disable editor collision display
	if !Global.DEBUG_COLLISION_SHAPES:
		get_tree().set_debug_collisions_hint(false)

	var title_menu = preload(\"res://Scenes/MenuTitle.tscn\").instance()
	get_node(\"/root\").add_child(title_menu)
	editor.queue_free()


func _on_Back_pressed():
	if editor.progress:
		unsaved_progress_dialog.popup()
	else:
		_handle_back()


func _on_UnsavedProgressDialog_confirmed():
	_handle_back()


func _on_UnsavedProgressDialog_cancelled():
	pass
"

[sub_resource type="GDScript" id=2]
script/source = "extends MenuButton

onready var new = $New
onready var open = $Open
onready var save = $Save


func _ready():
	var popup = get_popup()
	popup.add_item(\"New...\")
	popup.add_item(\"Open...\")
	popup.add_item(\"Save...\")

	popup.connect(\"id_pressed\", self, \"_on_item_pressed\")

func _on_item_pressed(id):
	if id == 0:
		new.get_popup().popup()
	elif id == 1:
		open.get_popup().popup()
	elif id == 2:
		save.get_popup().popup()
"

[sub_resource type="GDScript" id=3]
script/source = "extends MenuButton

onready var unsaved_progress_dialog = $UnsavedProgressDialog
onready var editor = $\"/root/Editor\"

var selected_id = -1


func _ready():
	var new_popup = get_popup()

	new_popup.add_item(\"Back\") # 0
	new_popup.add_separator() # 1

	new_popup.add_item(\"Map\")
	new_popup.add_item(\"Object\")
	new_popup.add_item(\"Vehicle\")

	new_popup.connect(\"id_pressed\", self, \"_on_item_pressed\")


func _handle_new():
	if selected_id == 0:
		get_popup().hide()
		get_parent().get_popup().popup()
	elif selected_id == 2:
		# Map
		var map = preload(\"res://Scenes/Templates/TMap.tscn\").instance()
		editor.replace_project_root(map)
		editor.refresh_nodes()
		editor.current_file = \"\"
	elif selected_id == 3:
		# Object
		var obj = preload(\"res://Scenes/Templates/TObject.tscn\").instance()
		editor.replace_project_root(obj)
		editor.refresh_nodes()
		editor.current_file = \"\"
	elif selected_id == 4:
		# Vehicle
		var vehicle = preload(\"res://Scenes/Templates/TVehicle.tscn\").instance()
		editor.replace_project_root(vehicle)
		editor.refresh_nodes()
		editor.current_file = \"\"

func _on_item_pressed(id):
	selected_id = id

	if editor.progress:
		unsaved_progress_dialog.popup()
	else:
		_handle_new()


func _on_UnsavedProgressDialog_confirmed():
	_handle_new()


func _on_UnsavedProgressDialog_cancelled():
	selected_id = -1
"

[sub_resource type="GDScript" id=4]
script/source = "extends MenuButton


onready var unsaved_progress_dialog = $UnsavedProgressDialog
onready var editor = $\"/root/Editor\"
onready var file_dialog = $FileDialog

var selected_id = -1


func _ready():
	var new_popup = get_popup()

	new_popup.add_item(\"Back\") # 0
	new_popup.add_separator() # 1

	new_popup.add_item(\"From file\")

	new_popup.connect(\"id_pressed\", self, \"_on_item_pressed\")


func _handle_open():
	if selected_id == 2:
		# Open from file
		file_dialog.popup()


func _on_item_pressed(id):
	selected_id = id

	if selected_id < 1:
		get_popup().hide()
		get_parent().get_popup().popup()
		return

	if editor.progress:
		unsaved_progress_dialog.popup()
	else:
		_handle_open()


func _on_UnsavedProgressDialog_confirmed():
	_handle_open()


func _on_UnsavedProgressDialog_cancelled():
	selected_id = -1


func _on_FileDialog_file_selected(path):
	editor.replace_project_root(load(path).instance())
	editor.current_file = path
	editor.refresh_nodes()
"

[sub_resource type="GDScript" id=5]
script/source = "extends MenuButton


onready var editor = $\"/root/Editor\"
onready var file_dialog = $FileDialog
onready var no_scene_dialog = $NoSceneDialog


func _ready():
	var new_popup = get_popup()

	new_popup.add_item(\"Back\") # 0
	new_popup.add_separator() # 1

	new_popup.add_item(\"Save\") # 2
	new_popup.add_item(\"Save As...\")

	file_dialog.access = FileDialog.ACCESS_FILESYSTEM
	file_dialog.filters = PoolStringArray([\"*.tscn ; Godot Scenes\"])

	new_popup.connect(\"id_pressed\", self, \"_on_item_pressed\")


func _process(delta):
	get_popup().set_item_disabled(2, !(editor.current_file != \"\" and editor.progress))
	get_popup().set_item_disabled(3, !editor.progress)


func _save(path: String):
	var packed_scene = PackedScene.new()

	packed_scene.pack(editor.project_root)
	ResourceSaver.save(path, packed_scene)
	editor.current_file = path
	editor.progress = false


func _save_as():
	# Instead of directly saving, wait for FileDialog
	# to give us a file to save to.
	file_dialog.popup()


func _on_item_pressed(id):
	if id < 1:
		return

	if editor.project_root.get_child_count() == 0:
		no_scene_dialog.popup()
	else:
		if id == 2:
			_save(editor.current_file)
		elif id == 3:
			_save_as()


func _on_FileDialog_file_selected(path):
	_save(path)
"

[sub_resource type="GDScript" id=1]
script/source = "extends AcceptDialog


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
	popup_centered()
	hide()

# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass
"

[sub_resource type="GDScript" id=6]
script/source = "extends MenuButton

onready var unsaved_progress_dialog = $UnsavedProgressDialog
onready var editor = $\"/root/Editor\"

var selected_id = -1


func _ready():
	var new_popup = get_popup()

	for vehicle in Global.VEHICLES:
		new_popup.add_item(vehicle)

	new_popup.connect(\"id_pressed\", self, \"_on_item_pressed\")


func _handle_test():
	if selected_id != -1:
		var map_exists = false
		if editor.project_root.get_child_count() == 0:
			map_exists = false
		elif editor.project_root.name == \"Map\":
			map_exists = true

		if map_exists:
			var vehicle_name = get_popup().get_item_text(selected_id)
			Server.PLAYER_DATA[Server.STEAM_ID] = {\"vehicle\": vehicle_name}
			Global._setup_scene(Global.GameMode.EDITOR, editor.project_root, 12)

			if Server.NUM_CHECKPOINTS == 0:
				pass

		else:
			var vehicle_name = get_popup().get_item_text(selected_id)
			Server.PLAYER_DATA[Server.STEAM_ID] = {\"vehicle\": vehicle_name}
			var def_map = preload(\"res://Scenes/Templates/TMap.tscn\").instance()
			Global._setup_scene(Global.GameMode.EDITOR, def_map, 12)

		editor.start_testing()


func _on_item_pressed(id):
	selected_id = id

	if editor.progress:
		unsaved_progress_dialog.popup()
	else:
		_handle_test()


func _on_UnsavedProgressDialog_confirmed():
	_handle_test()


func _on_UnsavedProgressDialog_cancelled():
	selected_id = -1
"

[sub_resource type="GDScript" id=9]
script/source = "extends VBoxContainer

onready var vscrollbar = $\"../VScrollBar\"

const MAX_BUTTONS = 20

var prev_scroll: int = 0
var unassembled: bool = true


func _process(delta):
	var num_children = get_child_count()
	var scroll = vscrollbar.value
	vscrollbar.max_value = num_children - MAX_BUTTONS
	if scroll != prev_scroll:
		unassembled = true
	if num_children > MAX_BUTTONS and unassembled:
		assemble_buttons(scroll)
	prev_scroll = scroll


func assemble_buttons(top_id: int=0):
	for i in range(get_child_count()):
		if i < top_id or i > top_id + MAX_BUTTONS - 1:
			get_child(i).hide()
		else:
			get_child(i).show()
"

[sub_resource type="GDScript" id=8]
script/source = "extends Node2D

onready var cam = $\"../Camera2D\"
onready var cam_offset = $\"../../CamOffset\"
onready var x_axis = $X_AXIS
onready var y_axis = $Y_AXIS
onready var x_lab = $X_LABEL
onready var y_lab = $Y_LABEL

var cam_offset_x
var cam_offset_y

var suitable_scale_modifier = 10


func _ready():
	cam_offset_x = cam_offset.position.x
	cam_offset_y = cam_offset.position.y

	x_axis.offset = Vector2(0.5, 0.5)
	y_axis.offset = Vector2(0.5, 0.5)


func _process(delta):
	var x_offset = cam.position.x
	var y_offset = cam.position.y
	var width = cam_offset_x * 2 * cam.zoom.x
	var height = cam_offset_y * 2 * cam.zoom.y

	var cos_rotation = abs(cos(cam.rotation))
	if cos_rotation == 0:
		cos_rotation = 1

	x_axis.position = Vector2((x_offset - width), 0)
	y_axis.position = Vector2(0, (y_offset - height))

	# SQRT is to make the scale still increase a little bit when zooming in
	x_axis.scale = Vector2(width * suitable_scale_modifier / cos_rotation, 3)
	y_axis.scale = Vector2(3, height * suitable_scale_modifier / cos_rotation)

	if not cam.rotation in [0, PI/2, PI, 3*PI/2]:
		x_lab.hide()
		y_lab.hide()
	else:
		x_lab.show()
		y_lab.show()

		var x_lab_offset = Vector2((x_offset + width / 2) - 7.5, 1.25)
		var y_lab_offset = Vector2(5, (y_offset + height / 2 - 15))
		x_lab.rect_position = x_lab_offset / cos_rotation
		y_lab.rect_position = y_lab_offset / cos_rotation
"

[node name="Editor" type="Control"]
script = ExtResource( 1 )

[node name="Object" parent="." instance=ExtResource( 13 )]

[node name="Canvas" type="CanvasLayer" parent="."]

[node name="Shape" type="Control" parent="Canvas"]
margin_right = 960.0
margin_bottom = 540.0
script = ExtResource( 4 )

[node name="UI" type="Control" parent="Canvas"]
margin_right = 234.0
margin_bottom = 25.0

[node name="ShowPanel" type="Button" parent="Canvas/UI"]
margin_left = 3.0
margin_top = 513.0
margin_right = 32.0
margin_bottom = 537.0
text = ">>"
script = ExtResource( 6 )

[node name="Panel" type="Panel" parent="Canvas/UI"]
margin_right = 235.0
margin_bottom = 509.0

[node name="VScrollBar" type="VScrollBar" parent="Canvas/UI/Panel"]
margin_left = 1.0
margin_top = 22.0
margin_right = 13.0
margin_bottom = 506.0
rounded = true

[node name="HBoxContainer" type="HBoxContainer" parent="Canvas/UI/Panel"]
margin_right = 236.0
margin_bottom = 20.0
rect_min_size = Vector2( 40, 0 )

[node name="Back" type="Button" parent="Canvas/UI/Panel/HBoxContainer"]
margin_right = 42.0
margin_bottom = 20.0
text = "Back"
script = SubResource( 7 )

[node name="UnsavedProgressDialog" type="ConfirmationDialog" parent="Canvas/UI/Panel/HBoxContainer/Back"]
margin_left = 847.0
margin_top = 509.0
margin_right = 1072.0
margin_bottom = 584.0
window_title = "Unsaved changes"
dialog_text = "You have unsaved changes.
Do you want to proceed anyway?"
script = ExtResource( 7 )

[node name="File" type="MenuButton" parent="Canvas/UI/Panel/HBoxContainer"]
margin_left = 46.0
margin_right = 81.0
margin_bottom = 20.0
text = "File"
flat = false
script = SubResource( 2 )

[node name="New" type="MenuButton" parent="Canvas/UI/Panel/HBoxContainer/File"]
visible = false
margin_right = 227.0
margin_bottom = 20.0
focus_mode = 2
text = "New"
script = SubResource( 3 )

[node name="UnsavedProgressDialog" type="ConfirmationDialog" parent="Canvas/UI/Panel/HBoxContainer/File/New"]
margin_left = 847.0
margin_top = 509.0
margin_right = 1072.0
margin_bottom = 584.0
window_title = "Unsaved changes"
dialog_text = "You have unsaved changes.
Do you want to proceed anyway?"
script = ExtResource( 7 )

[node name="Open" type="MenuButton" parent="Canvas/UI/Panel/HBoxContainer/File"]
visible = false
margin_top = 24.0
margin_right = 227.0
margin_bottom = 44.0
focus_mode = 2
text = "Open"
script = SubResource( 4 )

[node name="FileDialog" type="FileDialog" parent="Canvas/UI/Panel/HBoxContainer/File/Open"]
margin_right = 1920.0
margin_bottom = 1080.0
window_title = "Open a File"
resizable = true
mode = 0
access = 2
filters = PoolStringArray( "\"*.tscn ; Godot Scenes\"" )
current_dir = "/Users/sack-/Documents/GitHub/race-with-your-friends"
current_path = "/Users/sack-/Documents/GitHub/race-with-your-friends/"

[node name="UnsavedProgressDialog" type="ConfirmationDialog" parent="Canvas/UI/Panel/HBoxContainer/File/Open"]
margin_left = 847.0
margin_top = 509.0
margin_right = 1072.0
margin_bottom = 584.0
window_title = "Unsaved changes"
dialog_text = "You have unsaved changes.
Do you want to proceed anyway?"
script = ExtResource( 7 )

[node name="Save" type="MenuButton" parent="Canvas/UI/Panel/HBoxContainer/File"]
visible = false
margin_top = 48.0
margin_right = 227.0
margin_bottom = 68.0
focus_mode = 2
text = "Save"
script = SubResource( 5 )

[node name="FileDialog" type="FileDialog" parent="Canvas/UI/Panel/HBoxContainer/File/Save"]
margin_right = 1920.0
margin_bottom = 1080.0
resizable = true
current_dir = "res://Mods"
current_path = "res://Mods/"

[node name="NoSceneDialog" type="AcceptDialog" parent="Canvas/UI/Panel/HBoxContainer/File/Save"]
margin_left = 847.0
margin_top = 509.0
margin_right = 1072.0
margin_bottom = 584.0
window_title = "Nothing to save"
dialog_text = "No scene to save.
To get started, go to \"New\" or \"Open\"."
script = SubResource( 1 )

[node name="Test" type="MenuButton" parent="Canvas/UI/Panel/HBoxContainer"]
margin_left = 85.0
margin_right = 124.0
margin_bottom = 20.0
focus_mode = 2
text = "Test"
flat = false
script = SubResource( 6 )

[node name="UnsavedProgressDialog" type="ConfirmationDialog" parent="Canvas/UI/Panel/HBoxContainer/Test"]
margin_left = 847.0
margin_top = 509.0
margin_right = 1072.0
margin_bottom = 584.0
window_title = "Unsaved changes"
dialog_text = "You have unsaved changes.
Do you want to proceed anyway?"
script = ExtResource( 7 )

[node name="Buttons" type="VBoxContainer" parent="Canvas/UI/Panel"]
margin_left = 17.0
margin_top = 28.0
margin_right = 232.0
margin_bottom = 505.0
script = SubResource( 9 )

[node name="HidePanel" type="Button" parent="Canvas/UI/Panel"]
margin_left = 3.0
margin_top = 513.0
margin_right = 32.0
margin_bottom = 537.0
text = "<<"
script = ExtResource( 3 )

[node name="TabsToggleButton" type="CheckButton" parent="Canvas/UI"]
margin_left = 32.0
margin_top = 505.0
margin_right = 141.0
margin_bottom = 545.0
pressed = true
text = "Tabs"

[node name="Tabs" type="TabContainer" parent="Canvas/UI"]
margin_left = 236.0
margin_right = 471.0
margin_bottom = 200.0
tab_align = 0

[node name="Camera" type="VBoxContainer" parent="Canvas/UI/Tabs"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 4.0
margin_top = 32.0
margin_right = -4.0
margin_bottom = -4.0
custom_constants/separation = 30

[node name="CamPos" type="Control" parent="Canvas/UI/Tabs/Camera"]
margin_right = 227.0

[node name="CameraPos" type="Label" parent="Canvas/UI/Tabs/Camera/CamPos"]
margin_right = 171.0
margin_bottom = 14.0
text = "Camera Position:"
autowrap = true

[node name="CameraPosReset" type="Button" parent="Canvas/UI/Tabs/Camera/CamPos"]
margin_left = 175.0
margin_top = -3.0
margin_right = 226.0
margin_bottom = 17.0
text = "Origin"

[node name="CamZoom" type="Control" parent="Canvas/UI/Tabs/Camera"]
margin_top = 30.0
margin_right = 227.0
margin_bottom = 30.0

[node name="CameraZoom" type="Label" parent="Canvas/UI/Tabs/Camera/CamZoom"]
margin_right = 225.0
margin_bottom = 14.0
mouse_filter = 0
text = "Camera Zoom:"

[node name="CameraZoomReset" type="Button" parent="Canvas/UI/Tabs/Camera/CamZoom"]
margin_left = 175.0
margin_top = -3.0
margin_right = 226.0
margin_bottom = 17.0
text = "Reset"

[node name="CamPan" type="Control" parent="Canvas/UI/Tabs/Camera"]
margin_top = 60.0
margin_right = 227.0
margin_bottom = 60.0

[node name="CameraPanLabel" type="Label" parent="Canvas/UI/Tabs/Camera/CamPan"]
margin_right = 141.0
margin_bottom = 14.0
mouse_filter = 0
text = "Camera Pan Spd:"

[node name="CameraPan" type="HSlider" parent="Canvas/UI/Tabs/Camera/CamPan"]
margin_left = 146.0
margin_top = -6.0
margin_right = 231.0
margin_bottom = 18.0
min_value = 0.1
max_value = 10.0
step = 0.1
value = 1.0

[node name="PixPerf" type="Control" parent="Canvas/UI/Tabs/Camera"]
margin_top = 90.0
margin_right = 227.0
margin_bottom = 90.0

[node name="PixelPerfectLabel" type="Label" parent="Canvas/UI/Tabs/Camera/PixPerf"]
margin_right = 346.0
margin_bottom = 14.0
text = "Pixel Perfect Movement"

[node name="PixelPerfectButton" type="CheckButton" parent="Canvas/UI/Tabs/Camera/PixPerf"]
margin_left = 155.0
margin_top = -14.0
margin_right = 231.0
margin_bottom = 26.0

[node name="CamRot" type="Control" parent="Canvas/UI/Tabs/Camera"]
margin_top = 120.0
margin_right = 227.0
margin_bottom = 120.0

[node name="CameraRotationLabel" type="Label" parent="Canvas/UI/Tabs/Camera/CamRot"]
margin_right = 139.0
margin_bottom = 14.0
text = "Camera Rotation:"

[node name="CameraRotation" type="HSlider" parent="Canvas/UI/Tabs/Camera/CamRot"]
margin_left = 146.0
margin_top = -6.0
margin_right = 231.0
margin_bottom = 18.0
max_value = 360.0
step = 10.0
ticks_on_borders = true

[node name="ShowAxes" type="Control" parent="Canvas/UI/Tabs/Camera"]
margin_top = 150.0
margin_right = 227.0
margin_bottom = 150.0

[node name="ShowAxesLabel" type="Label" parent="Canvas/UI/Tabs/Camera/ShowAxes"]
margin_right = 231.0
margin_bottom = 14.0
text = "Show Axes"

[node name="ShowAxesButton" type="CheckButton" parent="Canvas/UI/Tabs/Camera/ShowAxes"]
margin_left = 145.0
margin_top = -16.0
margin_right = 231.0
margin_bottom = 24.0
pressed = true

[node name="Map" type="VBoxContainer" parent="Canvas/UI/Tabs"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 4.0
margin_top = 32.0
margin_right = -4.0
margin_bottom = -4.0

[node name="ShowMap" type="Control" parent="Canvas/UI/Tabs/Map"]
margin_right = 227.0

[node name="ShowMapLabel" type="Label" parent="Canvas/UI/Tabs/Map/ShowMap"]
margin_right = 165.0
margin_bottom = 14.0
text = "Show Map"

[node name="ShowMapButton" type="CheckButton" parent="Canvas/UI/Tabs/Map/ShowMap"]
margin_left = 155.0
margin_top = -13.0
margin_right = 231.0
margin_bottom = 27.0

[node name="Test" type="VBoxContainer" parent="Canvas/UI/Tabs"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 4.0
margin_top = 32.0
margin_right = -4.0
margin_bottom = -4.0

[node name="StopTestingButton" type="Button" parent="Canvas/UI/Tabs/Test"]
margin_right = 227.0
margin_bottom = 20.0
text = "Stop Testing"
script = ExtResource( 8 )

[node name="Obj" type="VBoxContainer" parent="Canvas/UI/Tabs"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 4.0
margin_top = 32.0
margin_right = -4.0
margin_bottom = -4.0

[node name="NameLabel" type="Label" parent="Canvas/UI/Tabs/Obj"]
margin_right = 227.0
margin_bottom = 14.0
text = "Name:"

[node name="NameField" type="LineEdit" parent="Canvas/UI/Tabs/Obj"]
margin_top = 18.0
margin_right = 227.0
margin_bottom = 42.0

[node name="Path" type="Label" parent="Canvas/UI"]
margin_left = 227.0
margin_top = 505.0
margin_right = 736.0
margin_bottom = 535.0
align = 1
valign = 2
autowrap = true

[node name="CamOffset" type="Node2D" parent="."]
position = Vector2( 960, 540 )

[node name="Camera2D" type="Camera2D" parent="CamOffset"]
rotating = true
current = true
script = ExtResource( 2 )

[node name="Display" type="Node2D" parent="CamOffset"]

[node name="Axes" type="Node2D" parent="CamOffset"]
script = SubResource( 8 )

[node name="X_AXIS" type="Sprite" parent="CamOffset/Axes"]
position = Vector2( 1.00001, 1.00001 )
scale = Vector2( 2.00001, 2.00001 )
texture = ExtResource( 9 )

[node name="Y_AXIS" type="Sprite" parent="CamOffset/Axes"]
position = Vector2( 1, 1 )
scale = Vector2( 2, 2 )
texture = ExtResource( 10 )
offset = Vector2( 0.1, 0.1 )

[node name="X_LABEL" type="Label" parent="CamOffset/Axes"]
margin_left = -9.0
margin_top = 1.0
margin_right = -2.0
margin_bottom = 15.0
text = "x"
align = 2

[node name="Y_LABEL" type="Label" parent="CamOffset/Axes"]
margin_left = -9.0
margin_right = -2.0
margin_bottom = 14.0
text = "y"
align = 2

[node name="Vertices" type="Node2D" parent="CamOffset"]

[node name="Vertex" type="TextureButton" parent="CamOffset/Vertices"]
visible = false
margin_left = -488.0
margin_top = -278.0
margin_right = -480.0
margin_bottom = -270.0
rect_pivot_offset = Vector2( 4, 4 )
texture_normal = ExtResource( 5 )
texture_pressed = ExtResource( 11 )
script = ExtResource( 12 )
__meta__ = {
"_editor_description_": "YXNlcHJpdGVfd2l6YXJkX2NvbmZpZwpwbGF5ZXJ8PQpzb3VyY2V8PQpsYXllcnw9Cm9wX2V4cHw9VHJ1ZQpvX2ZvbGRlcnw9Cm9fbmFtZXw9Cm9ubHlfdmlzaWJsZXw9RmFsc2UKb19leF9wfD0K"
}

[connection signal="mouse_entered" from="Canvas/Shape" to="Canvas/Shape" method="_on_Shape_mouse_entered"]
[connection signal="mouse_exited" from="Canvas/Shape" to="Canvas/Shape" method="_on_Shape_mouse_exited"]
[connection signal="pressed" from="Canvas/UI/ShowPanel" to="Canvas/UI/ShowPanel" method="_on_ShowPanel_pressed"]
[connection signal="pressed" from="Canvas/UI/Panel/HBoxContainer/Back" to="Canvas/UI/Panel/HBoxContainer/Back" method="_on_Back_pressed"]
[connection signal="file_selected" from="Canvas/UI/Panel/HBoxContainer/File/Open/FileDialog" to="Canvas/UI/Panel/HBoxContainer/File/Open" method="_on_FileDialog_file_selected"]
[connection signal="file_selected" from="Canvas/UI/Panel/HBoxContainer/File/Save/FileDialog" to="Canvas/UI/Panel/HBoxContainer/File/Save" method="_on_FileDialog_file_selected"]
[connection signal="pressed" from="Canvas/UI/Panel/HidePanel" to="Canvas/UI/Panel/HidePanel" method="_on_HidePanel_pressed"]
[connection signal="toggled" from="Canvas/UI/TabsToggleButton" to="." method="_on_TabsToggleButton_toggled"]
[connection signal="pressed" from="Canvas/UI/Tabs/Camera/CamPos/CameraPosReset" to="." method="_on_CameraPosReset_pressed"]
[connection signal="pressed" from="Canvas/UI/Tabs/Camera/CamZoom/CameraZoomReset" to="." method="_on_CameraZoomReset_pressed"]
[connection signal="value_changed" from="Canvas/UI/Tabs/Camera/CamPan/CameraPan" to="." method="_on_CameraPan_value_changed"]
[connection signal="toggled" from="Canvas/UI/Tabs/Camera/PixPerf/PixelPerfectButton" to="." method="_on_PixelPerfectButton_toggled"]
[connection signal="value_changed" from="Canvas/UI/Tabs/Camera/CamRot/CameraRotation" to="." method="_on_CameraRotation_value_changed"]
[connection signal="toggled" from="Canvas/UI/Tabs/Camera/ShowAxes/ShowAxesButton" to="." method="_on_ShowAxesButton_toggled"]
[connection signal="toggled" from="Canvas/UI/Tabs/Map/ShowMap/ShowMapButton" to="." method="_on_ShowMapButton_toggled"]
[connection signal="pressed" from="Canvas/UI/Tabs/Test/StopTestingButton" to="Canvas/UI/Tabs/Test/StopTestingButton" method="_on_StopTestingButton_pressed"]
[connection signal="pressed" from="CamOffset/Vertices/Vertex" to="CamOffset/Vertices/Vertex" method="_on_Vertex_pressed"]

[editable path="Object"]
